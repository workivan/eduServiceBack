# Generated by Django 3.1.7 on 2021-06-07 04:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=255, primary_key=True, serialize=False, unique=True, verbose_name='login')),
                ('name', models.CharField(max_length=64, verbose_name='name')),
                ('surname', models.CharField(max_length=64, verbose_name='surname')),
                ('user_type', models.CharField(choices=[('KP', 'KEEPER'), ('ST', 'STUDENT'), ('OW', 'OWNER')], default='KP', max_length=50)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Personal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('personal', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Keeper',
            fields=[
                ('personal_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_auth.personal')),
            ],
            bases=('service_auth.personal',),
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('personal_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_auth.personal')),
            ],
            bases=('service_auth.personal',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('personal_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='service_auth.personal')),
                ('city', models.CharField(max_length=64, verbose_name='Город')),
                ('last_name', models.CharField(default='empty', max_length=64, verbose_name='Отчество')),
                ('job', models.TextField(default='empty', verbose_name='Место работы')),
                ('position', models.TextField(default='empty', verbose_name='Должность')),
            ],
            bases=('service_auth.personal',),
        ),
    ]
